---
import GitHubIcon from "../icons/GitHub.astro";
import NextJSIcon from "../icons/NextJS.astro";
import TailwindIcon from "../icons/Tailwind.astro";
import Link from "../icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import ReactIcon from "../icons/React.astro";
import AngularIcon from "../icons/Angular.astro";
import NodeIcon from "../icons/Node.astro";
import MongoIcon from "../icons/Mongo.astro";
import FirebaseIcon from "../icons/Firebase.astro";
import NpmIcon from "../icons/Npm.astro";
import ViteIcon from "../icons/Vite.astro";
import JsIcon from "../icons/Js.astro";
import TsIcon from "../icons/Ts.astro";
import MicroIcon from "../icons/MicroPlatform.astro";
import LocalStorage from "../icons/LocalStorage.astro";
import Ionic from "../icons/Ionic.astro";
import Swift from "../icons/Swift.astro";
import iOS from "../icons/iOS.astro";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJSIcon,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: TailwindIcon,
  },
  REACT: {
    name: "React",
    class: "bg-[#003f66] text-white",
    icon: ReactIcon,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-[#522f52] text-white",
    icon: AngularIcon,
  },
  NODE: {
    name: "NodeJS",
    class: "bg-[#3a4d38] text-white",
    icon: NodeIcon,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-[#00bd51] text-black",
    icon: MongoIcon,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-[#c96a2b] text-white",
    icon: FirebaseIcon,
  },
  NPM: {
    name: "npm",
    class: "bg-[#930032] text-white",
    icon: NpmIcon,
  },
  VITE: {
    name: "Vite",
    class: "bg-[#e8ffff] text-black",
    icon: ViteIcon,
  },
  JS: {
    name: "JavaScript",
    class: "bg-[#efca6a] text-black",
    icon: JsIcon,
  },
  TS: {
    name: "TypeScript",
    class: "bg-[#0049ae] text-white",
    icon: TsIcon,
  },
  MICRO_PLATFORM: {
    name: "Microsoft Platform",
    class: "bg-[#ab0768] text-white",
    icon: MicroIcon,
  },
  LOCAL_STORAGE: {
    name: "Local",
    class: "bg-[#ab0768] text-white",
    icon: LocalStorage,
  },
  IONIC: {
    name: "Ionic",
    class: "bg-[#05d9cd] text-black",
    icon: Ionic,
  },
  SWIFT: {
    name: "Swift",
    class: "bg-[#e63d19] text-white",
    icon: Swift,
  },
  iOS: {
    name: "iOS",
    class: "bg-[#000000] text-white",
    icon: iOS,
  },
};

const PROJECTS = [
  {
    title: "App de los Simpsons",
    description:
      "Desarrollada en Swift 6 con SwiftUI, basada en la arquitectura MVVM siguiendo los principios de Clean Architecture, llamadas tanto a mocks de datos en JSON como a APIs utilizando URLSession, implementa persistencia de datos con SwiftData y UserDefaults, uso de protocolos, incorpora dependencias para animaciones (Lottie) y pruebas Snapshot a través de Swift Package Manager, ofrece soporte multilingüe mediante el archivo Localizable, con versiones en inglés (predeterminado), español y francés, cuenta con una estrategia de testing completa, con tests unitarios, de integración, Snapshot, End-to-End (UITests)",
    github: "https://github.com/CarlosCG2000/theSimpsonsPlaceApp",
    image: "projects/16_app_simpsons_ios.png",
    tags: [TAGS.SWIFT, TAGS.iOS], // Añadir más tags
    alt: "Captura de una de las pantalla de la aplicación de iOS de los Simpsons",
  },
  {
    title: "3 en 1 App en Swift UI",
    description:
      "Menú de tres aplicaciones en una sola aplicación. 1º: sirve para calcular el IMC del usuario. 2º: permite visualizar un listado de superhéroes a través de una API externa (https://superheroapi.com/) ver sus detalles. 3º: a través del mapa de Apple mostrará tus lugares favoritos, los cuales los puedes guardar con UserDefaults y visualizar y redirigirse a su ubicación a través de un desplegable.",
    github: "https://github.com/CarlosCG2000/Curso_iOS",
    image: "projects/15_app-x3-ios.webp",
    tags: [TAGS.SWIFT, TAGS.iOS],
    alt: "Captura de una de las pantalla de la aplicación de iOS con 3 aplicaciones en 1",
  },
  {
    title: "Aplicación para gestionar recetas a través de una API",
    description:
      "Es una aplicación web donde vas a poder visualizar recetas de comida de la Api de themealdb.com, además de poder buscar recetas por nombre, categoría, ect. Aparte podrás añadir a favoritos tus recetas preferidas, añadir tips a dichas recetas, crear tus propias recetas, modificarlas, etc.",
    link: "https://recetas-mimo.netlify.app/#/listado-recetas",
    github: "https://github.com/CarlosCG2000/recetas-mimo",
    image: "projects/14-receta.webp",
    tags: [TAGS.TS, TAGS.ANGULAR, TAGS.IONIC, TAGS.LOCAL_STORAGE],
    alt: "Captura de una de las pantallas del proyecto de recetas",
  },
  {
    title: "Aplicación completa para la gestión de proyectos COIL'S",
    description:
      "Trabajo final de grado. Aplicación web para la gestión de datos de proyectos de COIL (proyectos entre varias entidades de diferentes paises) con la capacidad de gestionar todo tipo de usuarios, proyectos, etc.",
    link: "",
    github: "https://github.com/CarlosCG2000/gestion-coils-front",
    image: "projects/tfg-coil.webp",
    tags: [TAGS.TS, TAGS.ANGULAR, TAGS.NODE, TAGS.MONGODB, TAGS.FIREBASE],
    alt: "Captura de una de las pantallas de la aplicación de proyectos COIL",
  },
  {
    title: "Sistema de registro de producción Complex",
    description: "Proyecto de Complex en Rumania para Huercasa (agricola).",
    link: "",
    github: "https://github.com/CarlosCG2000/huercasa-complex",
    image: "projects/powerapp.webp",
    tags: [TAGS.MICRO_PLATFORM],
    alt: "Captura de una de unas de las pantallas de la interfaz del proyecto",
  },
  {
    title: "Prueba Técnica Junior",
    description:
      "Crea una aplicación para buscar películas, evitando que se haga una misma búqueda dos veces y que la búsqueda se haga automáticamente al escribir pero con debounce.",
    link: "",
    github: "https://github.com/CarlosCG2000/prueba-tecnica-junior",
    image: "projects/5-prueba-junior.webp",
    tags: [TAGS.JS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de la prueba técnica para el puesto de Junior",
  },
  {
    title: "Clon de Google Translate con ChatGPT",
    description:
      "Divido en el front y el back (que es donde tengo la API-key de OpenAI). Uso ChatGPT para crear un traductor de texto con un estilo parecido a Google Translate.",
    link: "",
    github: "https://github.com/CarlosCG2000/Mi-Clon-Google-Translate",
    image: "projects/09-google-traductor.webp",
    tags: [TAGS.TS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de mi propio Google Translate con ChatGPT",
  },
  {
    title: "TodoMVC App",
    description:
      "Listar, añadir, borrar, completar y filtrar los TODOs, añadir estilos del TodoMVC, animaciones con AutoAnimate, etc.",
    link: "https://todos-lista.netlify.app",
    github: "https://github.com/CarlosCG2000/TodoMVC-App",
    image: "projects/8-todo-app.webp",
    tags: [TAGS.TS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de TodoMVC App",
  },
  {
    title: "Librería de enrutamiento en React",
    description:
      "Publicación de una libreria en NPM. Un proyecto desarrollado desde 0, donde creo un enrutamiento de navegación estilo React Router.",
    link: "https://www.npmjs.com/package/07-navegation-router?activeTab=code",
    github: "",
    image: "/projects/7-rutas.webp",
    tags: [TAGS.JS, TAGS.REACT, TAGS.VITE, TAGS.NPM],
    alt: "Captura de la pagina de NPM donde tengo publicada la libreria",
  },
  {
    title: "CRUD con Redux Toolkit",
    description:
      "El estilo de aplicación más típico solucionado usando un estado global con Redux Toolkit",
    link: "",
    github: "https://github.com/CarlosCG2000/App-CRUD-Redux",
    image: "projects/10-crud-redux.webp",
    tags: [TAGS.TS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de una la pantalla de CRUD con Redux Toolkit y TypeScript",
  },
  {
    title: "Prueba Técnica Trainee",
    description:
      "Muestra una lista de productos que vienen de un JSON, con filtros y useContext para evitar pasar props innecesarias. En el carrito se pueden añadir, eliminar, actualizar la cantidad de productos y todo esto se guarda en el Local Storage.",
    link: "https://prueba-tecnica-trainee-2.netlify.app",
    github: "https://github.com/CarlosCG2000/Prueba-tecnica-trainee-2",
    image: "projects/6-prueba-junior-compra.webp",
    tags: [TAGS.JS, TAGS.REACT, TAGS.VITE, TAGS.LOCAL_STORAGE],
    alt: "Captura de la prueba técnica para el puesto de Trainee",
  },
  {
    title: "Prueba Técnica Trainee-Junior",
    description:
      "Recuperar un hecho aleatorio de gatos y muestra una imagen de un gato con la primera palabra del hecho.",
    link: "https://trainee-prueba-tecnica.netlify.app/",
    github: "https://github.com/CarlosCG2000/prueba-tecnica-trainee",
    image: "projects/4-prueba-trainee.webp",
    tags: [TAGS.JS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de la prueba técnica para el puesto de Trainee-Junior",
  },
  {
    title: "Juego Tres en Raya",
    description:
      "Juego para dos personas del clásico tres en raya con almacenamiento en el Local Storage para guardar la partida actual.",
    link: "https://juego-3-en-raya.netlify.app/",
    github: "https://github.com/CarlosCG2000/juego-tres-en-raya",
    image: "projects/2-tres-en-raya.webp",
    tags: [TAGS.JS, TAGS.REACT, TAGS.VITE],
    alt: "Captura de la interfaz del proyecto de tarjetas de seguidores estilo X (Twitter)",
  },
  // {
  //   title: "Etiquetas de seguidores estilo X (Twitter)",
  //   description:
  //     "Trata de crear tarjetas de usuario de X (Twitter) con la capacidad de seguir a otros usuarios de forma estática.",
  //   link: "https://tarjetas-x-twitter.netlify.app",
  //   github: "https://github.com/CarlosCG2000/tarjeta-usuarios-x-twitter",
  //   image: "projects/1-tarjeta-x.webp",
  //   tags: [TAGS.JS, TAGS.REACT, TAGS.VITE],
  //   alt: "Captura de la interfaz del proyecto de tarjetas de seguidores estilo X (Twitter)",
  // },
  // {
  //   title: "Puntero de ratón seguidor",
  //   description:
  //     "Creación de una app para seguir el puntero. Es un proyecto en el que pueda seguir el puntero (con el efecto de una bolita) con una animación y además poder activar y desactivar, etcétera.  ",
  //   link: "https://puntero-marcador.netlify.app",
  //   github: "https://github.com/CarlosCG2000/puntero-marcador",
  //   image: "/projects/3-puntero.webp",
  //   tags: [TAGS.JS, TAGS.REACT, TAGS.VITE],
  //   alt: "Captura de la interfaz del puntero de ratón seguidor",
  // },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, alt, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={alt}
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHubIcon class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
