---
interface Props {
  delay?: number;
  class?: string;
}

const { delay = 0, class: className = "" } = Astro.props;
---

<div class={`scroll-reveal ${className}`} style={`animation-delay: ${delay}ms`}>
  <slot />
</div>

<style>
  .scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: "0px 0px -50px 0px",
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("revealed");
        }
      });
    }, observerOptions);

    const revealElements = document.querySelectorAll(".scroll-reveal");
    revealElements.forEach((el) => observer.observe(el));
  });
</script>
